---
import Layout from "@/layouts/DefaultLayout.astro";
import { getCollection, type CollectionEntry, getEntry } from "astro:content";
import { Container } from "@/components/ui/container";
import { Card, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Stack } from "@/components/ui/stack";

export async function getStaticPaths() {
	const categories = await getCollection("categories");
	
	return categories.map((entry) => ({
		params: {
			category: entry.id,
		},
		props: {
			entry
		}
	}));
}

interface Props {
	entry: CollectionEntry<"categories">;
}

const { entry } = Astro.props;

const rawEntries = await getCollection("docs", ({ data }) => {
	if (data.category.id === entry.id) {
		return true;
	}

	if (data["additional-categories"]?.some((c) => c.id === entry.id)) {
		return true;
	}

	return false;
});

// Get authors from guidesEntries and await getEntry for each author

const docsEntries = await Promise.all(rawEntries.map(async (e) => ({
	...e,
	data: {
		...e.data,
		author: await getEntry(e.data.author)
	}
})));

---

<Layout title={entry.data.name}>
	<Container>
		<Stack>
			<h1 class="text-5xl font-bold" transition:name={entry.data.name}>{entry.data.name}</h1>

			{docsEntries.map((e) => (
				<a
					href={"/" + e.slug}
				>
					<Card>
						<CardHeader>
							<CardTitle transition:name={e.data.title}>{e.data.title}</CardTitle>
							<CardDescription>
								<span transition:name={e.data.author.data.name}>{e.data.author.data.name}</span><br/>
								<span transition:name={e.data.description}>{e.data.description}</span>
							</CardDescription>
						</CardHeader>
					</Card>
				</a>
			))}
		</Stack>
	</Container>
</Layout>
