---
import Layout from "@/layouts/DefaultLayout.astro";
import { getCollection, type CollectionEntry, getEntry, getEntries } from "astro:content";
import { Container } from "@/components/ui/container";
import AuthorCard from "@/components/AuthorCard.astro";
import ReadInGRead from "@/components/ReadInGRead.astro";
import { Stack } from "@/components/ui/stack";

export async function getStaticPaths() {
	const knowledgeEntries = await getCollection("knowledge");
	
	return knowledgeEntries.map((entry) => {
		return {
			params: {
				category: entry.data.category.id,
				slug: entry.slug.split("/").slice(1).join("/")
			},
			props: {
				entry,
			}
		};
	});
}

interface Props {
	entry: CollectionEntry<"knowledge">;
	author: CollectionEntry<"contributors">;
}

const { category, slug } = Astro.params;
const { entry } = Astro.props;
const authors = await getEntries(entry.data.authors);
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
	<Container>
		<Stack>
			<h1 class="text-5xl font-bold" transition:name={entry.id + "title"}>{entry.data.title}</h1>
			<p
				class="text-sm text-muted-foreground"
				transition:name={entry.id + "description"}
			>
				{entry.data.description}
			</p>
			<div>
				{authors.length ? (
					<div class="flex space-x-4">
						{authors.map((author) => (
							<AuthorCard author={author} />
						))}
					</div>
				) : null}
			</div>
			<ReadInGRead path={"/" + category + "/" + slug} />
			<div class="prose dark:prose-invert">
				<Content />
			</div>
		</Stack>
	</Container>
</Layout>
